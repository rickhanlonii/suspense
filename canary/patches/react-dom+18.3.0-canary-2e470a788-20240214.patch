diff --git a/node_modules/react-dom/cjs/react-dom.development.js b/node_modules/react-dom/cjs/react-dom.development.js
index 0964557..1d6a6f4 100644
--- a/node_modules/react-dom/cjs/react-dom.development.js
+++ b/node_modules/react-dom/cjs/react-dom.development.js
@@ -24307,7 +24307,7 @@ var didIncludeCommitPhaseUpdate = false; // The most recent time we either commi
 // TODO: Think of a better name for this variable?
 
 var globalMostRecentFallbackTime = 0;
-var FALLBACK_THROTTLE_MS = 300; // The absolute time for when we should start giving up on rendering
+var FALLBACK_THROTTLE_MS = function () { return window.FALLBACK_THROTTLE_MS || 500; } // The absolute time for when we should start giving up on rendering
 // more and prefer CPU suspense heuristics instead.
 
 var workInProgressRootRenderTargetTime = Infinity; // How long a render is supposed to take before we start following CPU
@@ -24796,7 +24796,7 @@ function finishConcurrentRender(root, exitStatus, finishedWork, lanes) {
     if (includesOnlyRetries(lanes) && (alwaysThrottleRetries )) {
       // This render only included retries, no updates. Throttle committing
       // retries so that we don't show too many loading states too quickly.
-      var msUntilTimeout = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now$1(); // Don't bother with a very short suspense time.
+      var msUntilTimeout = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS() - now$1(); // Don't bother with a very short suspense time.
 
       if (msUntilTimeout > 10) {
         markRootSuspended(root, lanes, workInProgressDeferredLane);
@@ -26048,10 +26048,29 @@ function completeUnitOfWork(unitOfWork) {
 
   do {
     {
-      if ((completedWork.flags & Incomplete) !== NoFlags$1) {
-        // NOTE: If we re-enable sibling prerendering in some cases, this branch
-        // is where we would switch to the unwinding path.
-        error('Internal React error: Expected this fiber to be complete, but ' + "it isn't. It should have been unwound. This is a bug in React.");
+      if (window.REVERT_SIBLING_RENDER) {
+        if ((completedWork.flags & Incomplete) !== NoFlags) {
+          // This fiber did not complete, because one of its children did not
+          // complete. Switch to unwinding the stack instead of completing it.
+          //
+          // The reason "unwind" and "complete" is interleaved is because when
+          // something suspends, we continue rendering the siblings even though
+          // they will be replaced by a fallback.
+          // TODO: Disable sibling prerendering, then remove this branch.
+          unwindUnitOfWork(completedWork);
+          return;
+        }
+      } else {
+        if (true) {
+          if ((completedWork.flags & Incomplete) !== NoFlags) {
+            // NOTE: If we re-enable sibling prerendering in some cases, this branch
+            // is where we would switch to the unwinding path.
+            console.error(
+              'Internal React error: Expected this fiber to be complete, but ' +
+              "it isn't. It should have been unwound. This is a bug in React.",
+            );
+          }
+        }
       }
     } // The current, flushed, state of this fiber is the alternate. Ideally
     // nothing should rely on this, but relying on it here means that we don't
@@ -26795,7 +26814,7 @@ function pingSuspendedRoot(root, wakeable, pingedLanes) {
     // we should probably never restart.
     // If we're suspended with delay, or if it's a retry, we'll always suspend
     // so we can always restart.
-    if (workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && includesOnlyRetries(workInProgressRootRenderLanes) && now$1() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS) {
+    if (workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && includesOnlyRetries(workInProgressRootRenderLanes) && now$1() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS()) {
       // Force a restart from the root by unwinding the stack. Unless this is
       // being called from the render phase, because that would cause a crash.
       if ((executionContext & RenderContext) === NoContext) {
diff --git a/node_modules/react-dom/cjs/react-dom.production.js b/node_modules/react-dom/cjs/react-dom.production.js
index d8847cc..77ccf9e 100644
--- a/node_modules/react-dom/cjs/react-dom.production.js
+++ b/node_modules/react-dom/cjs/react-dom.production.js
@@ -16870,7 +16870,7 @@ let didIncludeCommitPhaseUpdate = false; // The most recent time we either commi
 // TODO: Think of a better name for this variable?
 
 let globalMostRecentFallbackTime = 0;
-const FALLBACK_THROTTLE_MS = 300; // The absolute time for when we should start giving up on rendering
+const FALLBACK_THROTTLE_MS = function() { return window.FALLBACK_THROTTLE_MS || 500; } // The absolute time for when we should start giving up on rendering
 // more and prefer CPU suspense heuristics instead.
 
 let workInProgressRootRenderTargetTime = Infinity; // How long a render is supposed to take before we start following CPU
@@ -17306,7 +17306,7 @@ function finishConcurrentRender(root, exitStatus, finishedWork, lanes) {
     if (includesOnlyRetries(lanes) && (alwaysThrottleRetries )) {
       // This render only included retries, no updates. Throttle committing
       // retries so that we don't show too many loading states too quickly.
-      const msUntilTimeout = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now(); // Don't bother with a very short suspense time.
+      const msUntilTimeout = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS() - now(); // Don't bother with a very short suspense time.
 
       if (msUntilTimeout > 10) {
         markRootSuspended(root, lanes, workInProgressDeferredLane);
@@ -18989,7 +18989,7 @@ function pingSuspendedRoot(root, wakeable, pingedLanes) {
     // we should probably never restart.
     // If we're suspended with delay, or if it's a retry, we'll always suspend
     // so we can always restart.
-    if (workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && includesOnlyRetries(workInProgressRootRenderLanes) && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS) {
+    if (workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && includesOnlyRetries(workInProgressRootRenderLanes) && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS()) {
       // Force a restart from the root by unwinding the stack. Unless this is
       // being called from the render phase, because that would cause a crash.
       if ((executionContext & RenderContext) === NoContext) {
diff --git a/node_modules/react-dom/cjs/react-dom.production.min.js b/node_modules/react-dom/cjs/react-dom.production.min.js
index f377627..40f96b9 100644
--- a/node_modules/react-dom/cjs/react-dom.production.min.js
+++ b/node_modules/react-dom/cjs/react-dom.production.min.js
@@ -251,7 +251,7 @@ function ik(a,b){for(;null!==$i;){var c=$i;switch(c.tag){case 0:case 11:case 15:
 var lk={getCacheSignal:function(){return gg(U).controller.signal},getCacheForType:function(a){var b=gg(U),c=b.data.get(a);void 0===c&&(c=a(),b.data.set(a,c));return c}},mk="function"===typeof WeakMap?WeakMap:Map,nk=da.ReactCurrentDispatcher,ok=da.ReactCurrentCache,pk=da.ReactCurrentOwner,qk=da.ReactCurrentBatchConfig,N=0,M=null,X=null,L=0,O=0,rk=null,sk=!1,uf=0,S=0,le=null,Qe=0,tk=0,uk=0,oe=0,xh=null,qe=null,se=!1,vk=!1,Tj=0,Mi=Infinity,re=null,ph=!1,qh=null,sh=null,wk=!1,xk=null,yk=0,zk=0,Ak=null,
 Bk=0,Ck=null;function Zg(a){if(0===(a.mode&1))return 2;if(0!==(N&2)&&0!==L)return L&-L;if(null!==dh())return a=Be,0!==a?a:ye();a=G;if(0!==a)return a;a=window.event;a=void 0===a?32:Dk(a.type);return a}function ug(a,b,c){if(a===M&&2===O||null!==a.cancelPendingCommit)me(a,0),ne(a,L,oe);Ek(a,c);if(0===(N&2)||a!==M)a===M&&(0===(N&2)&&(tk|=c),4===S&&ne(a,L,oe)),ee(a),2===c&&0===N&&0===(b.mode&1)&&(Mi=Ta()+500,he(!0))}
 function we(a,b){if(0!==(N&6))throw Error(t(327));var c=a.callbackNode;if(ie()&&a.callbackNode!==c)return null;var d=mb(a,a===M?L:0);if(0===d)return null;var e=0===(d&60)&&0===(d&a.expiredLanes)&&!b;b=e?Fk(a,d):je(a,d);if(0!==b){var f=e;do{if(6===b)ne(a,d,0);else{e=a.current.alternate;if(f&&!Gk(e)){b=je(a,d);f=!1;continue}if(2===b){f=d;var g=ob(a,f);0!==g&&(d=g,b=ke(a,f,g))}if(1===b)throw c=le,me(a,0),ne(a,d,0),ee(a),c;a.finishedWork=e;a.finishedLanes=d;a:{f=a;switch(b){case 0:case 1:throw Error(t(345));
-case 4:if((d&4194176)===d){ne(f,d,oe);break a}break;case 2:case 3:case 5:break;default:throw Error(t(329));}if((d&62914560)===d&&(b=Tj+300-Ta(),10<b)){ne(f,d,oe);if(0!==mb(f,0))break a;f.timeoutHandle=Hk(Ik.bind(null,f,e,qe,re,se,d,oe),b);break a}Ik(f,e,qe,re,se,d,oe)}}break}while(1)}ee(a);ve(a,Ta());a=a.callbackNode===c?we.bind(null,a):null;return a}
+case 4:if((d&4194176)===d){ne(f,d,oe);break a}break;case 2:case 3:case 5:break;default:throw Error(t(329));}if((d&62914560)===d&&(b=Tj+(window.FALLBACK_THROTTLE_MS || 500)-Ta(),10<b)){ne(f,d,oe);if(0!==mb(f,0))break a;f.timeoutHandle=Hk(Ik.bind(null,f,e,qe,re,se,d,oe),b);break a}Ik(f,e,qe,re,se,d,oe)}}break}while(1)}ee(a);ve(a,Ta());a=a.callbackNode===c?we.bind(null,a):null;return a}
 function ke(a,b,c){var d=xh,e=a.current.memoizedState.isDehydrated;e&&(me(a,c).flags|=256);c=je(a,c);if(2!==c){if(sk&&!e)return a.errorRecoveryDisabledLanes|=b,tk|=b,4;a=qe;qe=d;null!==a&&Ei(a)}return c}function Ei(a){null===qe?qe=a:qe.push.apply(qe,a)}function Ik(a,b,c,d,e,f,g){if(0===(f&42)&&(Jk={stylesheets:null,count:0,unsuspend:Kk},ek(b),b=Lk(),null!==b)){a.cancelPendingCommit=b(pe.bind(null,a,c,d,e));ne(a,f,g);return}pe(a,c,d,e,g)}
 function Gk(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!hd(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}
 function Ek(a,b){a.pendingLanes|=b;268435456!==b&&(a.suspendedLanes=0,a.pingedLanes=0);N&2?se=!0:N&4&&(vk=!0);Yd()}function ne(a,b,c){b&=~uk;b&=~tk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(var d=a.expirationTimes,e=b;0<e;){var f=31-gb(e),g=1<<f;d[f]=-1;e&=~g}0!==c&&tb(a,c,b)}function Mk(a,b){var c=N;N|=1;try{return a(b)}finally{N=c,0===N&&(Mi=Ta()+500,he(!0))}}
@@ -270,7 +270,7 @@ function $k(a,b,c,d,e,f){do ie();while(null!==xk);if(0!==(N&6))throw Error(t(327
 4194218)&&0!==(k&42)?a===Ck?Bk++:(Bk=0,Ck=a):Bk=0;he(!1);return null}function cl(a,b){0===(a.pooledCacheLanes&=b)&&(b=a.pooledCache,null!=b&&(a.pooledCache=null,ti(b)))}
 function ie(){if(null!==xk){var a=xk,b=zk;zk=0;var c=xb(yk),d=32>c?32:c;c=qk.transition;var e=G;try{qk.transition=null;G=d;if(null===xk)var f=!1;else{d=Ak;Ak=null;var g=xk,h=yk;xk=null;yk=0;if(0!==(N&6))throw Error(t(331));var k=N;N|=4;jk(g.current);Zj(g,g.current,h,d);N=k;he(!1);if(cb&&"function"===typeof cb.onPostCommitFiberRoot)try{cb.onPostCommitFiberRoot(bb,g)}catch(n){}f=!0}return f}finally{G=e,qk.transition=c,cl(a,b)}}return!1}
 function dl(a,b,c){b=lh(c,b);b=oh(a,b,2);a=Ke(a,b,2);null!==a&&(Ek(a,2),ee(a))}function W(a,b,c){if(3===a.tag)dl(a,a,c);else for(;null!==b;){if(3===b.tag){dl(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if("function"===typeof b.type.getDerivedStateFromError||"function"===typeof d.componentDidCatch&&(null===sh||!sh.has(d))){a=lh(c,a);a=rh(b,a,2);b=Ke(b,a,2);null!==b&&(Ek(b,2),ee(b));break}}b=b.return}}
-function wh(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new mk;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(sk=!0,e.add(c),a=el.bind(null,a,b,c),b.then(a,a))}function el(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);a.pingedLanes|=a.suspendedLanes&c;N&2?se=!0:N&4&&(vk=!0);Yd();M===a&&(L&c)===c&&(4===S||3===S&&(L&62914560)===L&&300>Ta()-Tj?0===(N&2)&&me(a,0):uk|=c);ee(a)}
+function wh(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new mk;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(sk=!0,e.add(c),a=el.bind(null,a,b,c),b.then(a,a))}function el(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);a.pingedLanes|=a.suspendedLanes&c;N&2?se=!0:N&4&&(vk=!0);Yd();M===a&&(L&c)===c&&(4===S||3===S&&(L&62914560)===L&&(window.FALLBACK_THROTTLE_MS || 500)>Ta()-Tj?0===(N&2)&&me(a,0):uk|=c);ee(a)}
 function fl(a,b){0===b&&(b=0===(a.mode&1)?2:qb());a=Xd(a,b);null!==a&&(Ek(a,b),ee(a))}function bi(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);fl(a,c)}function Ij(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;case 22:d=a.stateNode._retryCache;break;default:throw Error(t(314));}null!==d&&d.delete(b);fl(a,c)}
 function Yd(){if(50<Bk)throw Bk=0,Ck=null,N&2&&null!==M&&(M.errorRecoveryDisabledLanes|=L),Error(t(185));}var Zk;
 Zk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Yc.current)kg=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return kg=!1,gi(a,b,c);kg=0!==(a.flags&131072)?!0:!1}else kg=!1,K&&0!==(b.flags&1048576)&&sd(b,ld,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;Ph(a,b);a=b.pendingProps;var e=$c(b,Xc.current);Ch(b,c);e=Rf(null,b,d,a,e,c);var f=$f();b.flags|=1;"object"===typeof e&&null!==e&&"function"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=
